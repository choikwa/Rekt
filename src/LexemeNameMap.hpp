{single_input, "single_input"},
{file_input, "file_input"},
{eval_input, "eval_input"},
{decorator, "decorator"},
{decorators, "decorators"},
{decorated, "decorated"},
{funcdef, "funcdef"},
{parameters, "parameters"},
{typedargslist, "typedargslist"},
{tfpdef, "tfpdef"},
{varargslist, "varargslist"},
{vfpdef, "vfpdef"},
{stmt, "stmt"},
{simple_stmt, "simple_stmt"},
{small_stmt, "small_stmt"},
{expr_stmt, "expr_stmt"},
{testlist_star_expr, "testlist_star_expr"},
{augassign, "augassign"},
{del_stmt, "del_stmt"},
{pass_stmt, "pass_stmt"},
{flow_stmt, "flow_stmt"},
{break_stmt, "break_stmt"},
{continue_stmt, "continue_stmt"},
{return_stmt, "return_stmt"},
{yield_stmt, "yield_stmt"},
{raise_stmt, "raise_stmt"},
{import_stmt, "import_stmt"},
{import_name, "import_name"},
{import_from, "import_from"},
{import_as_name, "import_as_name"},
{dotted_as_name, "dotted_as_name"},
{import_as_names, "import_as_names"},
{dotted_as_names, "dotted_as_names"},
{dotted_name, "dotted_name"},
{global_stmt, "global_stmt"},
{nonlocal_stmt, "nonlocal_stmt"},
{assert_stmt, "assert_stmt"},
{compound_stmt, "compound_stmt"},
{if_stmt, "if_stmt"},
{while_stmt, "while_stmt"},
{for_stmt, "for_stmt"},
{with_stmt, "with_stmt"},
{with_item, "with_item"},
{except_clause, "except_clause"},
{suite, "suite"},
{test, "test"},
{test_nocond, "test_nocond"},
{lambdef, "lambdef"},
{lambdef_nocond, "lambdef_nocond"},
{or_test, "or_test"},
{and_test, "and_test"},
{not_test, "not_test"},
{comparison, "comparison"},
{comp_op, "comp_op"},
{star_expr, "star_expr"},
{expr, "expr"},
{xor_expr, "xor_expr"},
{and_expr, "and_expr"},
{shift_expr, "shift_expr"},
{arith_expri, "arith_expri"},
{term, "term"},
{factor, "factor"},
{power, "power"},
{atom, "atom"},
{testlist_comp, "testlist_comp"},
{trailer, "trailer"},
{subscriptlist, "subscriptlist"},
{subscript, "subscript"},
{sliceop, "sliceop"},
{exprlist, "exprlist"},
{testlist, "testlist"},
{dictorsetmaker, "dictorsetmaker"},
{arglist, "arglist"},
{argument, "argument"},
{comp_iter, "comp_iter"},
{comp_for, "comp_for"},
{comp_if, "comp_if"},
{yield_expr, "yield_expr"},
{yield_arg, "yield_arg"},
{sq, "'"},
{NEWLINE, "NEWLINE"},
{sqbrop, "["},
{sqbrcl, "]"},
{parenop, "("},
{parencl, ")"},
{rex_or, "|"},
{rex_star, "*"},
{ENDMARKER, "EOF"},
{rex_plus, "+"},
{NAME, "NAME"},
